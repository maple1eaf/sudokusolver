# -*- coding:utf-8 -*- 

"""
需要求解的数独格式必须为如下列表格式：
q = [
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0,
0, 0, 0, 0, 0, 0, 0, 0, 0]

---未知的数以数字0填充。
"""

import time

import solver

# easy难度，只需要尽力求解就可以得出结果
q1 = [
3, 7, 0, 0, 1, 9, 0, 4, 8,
0, 0, 8, 0, 4, 0, 0, 2, 0,
0, 0, 5, 0, 8, 0, 0, 0, 0,
0, 0, 6, 2, 0, 0, 0, 7, 9,
0, 0, 9, 1, 3, 7, 8, 0, 0,
5, 3, 0, 0, 0, 8, 2, 0, 0,
0, 0, 0, 0, 7, 0, 6, 0, 0,
0, 8, 0, 0, 0, 0, 9, 0, 0,
2, 6, 0, 3, 9, 0, 0, 8, 7]

# hard难度，递归且需要回溯
q2 = [
0, 8, 0, 0, 0, 5, 0, 0, 0,
0, 0, 0, 8, 0, 0, 0, 0, 2,
0, 0, 9, 0, 2, 0, 7, 0, 0,
4, 0, 0, 0, 9, 0, 0, 3, 0,
0, 0, 2, 3, 0, 1, 9, 0, 0,
0, 3, 0, 0, 6, 0, 0, 0, 8,
0, 0, 7, 0, 5, 0, 2, 0, 0,
5, 0, 0, 0, 0, 4, 0, 0, 0,
0, 0, 0, 7, 0, 0, 0, 9, 0]

# ashes难度，解题需要几秒
q3 = [
0, 4, 2, 0, 9, 0, 0, 0, 0,
0, 0, 0, 0, 0, 5, 0, 7, 3,
0, 0, 0, 0, 0, 0, 0, 0, 0,
6, 0, 0, 0, 0, 7, 0, 0, 0,
0, 0, 0, 4, 0, 0, 9, 0, 0,
0, 8, 0, 0, 0, 0, 2, 0, 0,
0, 0, 6, 0, 0, 0, 0, 0, 0,
0, 0, 0, 2, 8, 0, 0, 0, 0,
7, 0, 0, 0, 0, 0, 0, 6, 0]

# wrong，存在错误的数独，无解
q4 = [
0, 1, 0, 0, 0, 3, 0, 8, 9,
0, 0, 0, 0, 9, 0, 0, 0, 6,
6, 0, 0, 5, 0, 0, 0, 7, 0,
3, 4, 0, 1, 0, 0, 8, 6, 0,
0, 0, 0, 4, 6, 9, 0, 0, 0,
0, 6, 2, 0, 0, 8, 0, 4, 1,
0, 2, 0, 0, 0, 4, 5, 0, 8,# 这一排的5换成0即可有解
9, 0, 0, 0, 1, 0, 0, 0, 0,
1, 5, 0, 8, 0, 0, 0, 9, 0]

quedict = {"easy":q1, "hard":q2, "ashes":q3, "wrong":q4}

def getaquestion():
    print("There are 4 sudoku questions can be choosen.")
    while True:
        print("Please decide the level of difficulty by entering:")
        print('"easy" "hard" "ashes" or "wrong"\n')
        level = input("Please enter:")
        if level in quedict.keys():
            return quedict[level]#返回一个数独的序列
        else:
            print("\nWRONG: Wrong entering!!")
            print("==================================================")
            continue
        
def debug():
    question = getaquestion()# 获取数独
    time_begin = time.time()# 计时开始
    solver.sudokusolve(question)# 解题
    time_end = time.time()# 计时结束
    print("Time used:", time_end-time_begin,"s")# 输出解题时间

if __name__ == "__main__":
    debug()
